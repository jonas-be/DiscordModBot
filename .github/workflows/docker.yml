# This is a basic workflow to help you get started with Actions

name: Docker Build CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "feature/k8s-deployment" ]
  pull_request:
    branches: [ "main", "feature/k8s-deployment" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: docker login
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      # Runs a single command using the runners shell
      - name: docker build
        run: |
          docker build . -t jonasbe25/discord-mod-bot:latest
      - name: docker push
        run: |
          docker push jonasbe25/discord-mod-bot:latest
  

  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: latest
      - name: Download kubeconfig
        run: | 
          mkdir .kube
          echo '${{ secrets.KUBECONFIG }}' >> ./.kube/config
          cat ./.kube/config

      - name: Deploy to cluster
        run: |
          kubectl apply -f ./kubernetes/config-map.yml
          kubectl apply -f ./kubernetes/deployment.yml
